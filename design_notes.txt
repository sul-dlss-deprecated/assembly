# TODO: exif robot.

# TODO: upgrade assembly-image after it is modified.
# TODO: install assembly-images pre-reqs on lyberservices-dev (stack trace below).
# TODO: REST-call robot.

# TODO: try to control robot sleep_time in run_robot
# TODO: experiment with run_robot script (see lyber-core robot, esp line 264).

# TODO: add_jp2_file_node(): decide how to handle preserve-publish-shelve?

# TODO: improved front-end to invoke robots and get info about pending jobs.
# TODO: consider whether any logging would be useful
# TODO: consider whether it would help to write out information about druids processed.
# TODO: YARD documentation.
# TODO: ask about spurious ERROR messages from robot framework (message below).


Behavior of the exif robot:

    - new files

             lib/exifable.rb   # collect_exif_info()
        spec/lib/exifable.rb

             robots/assembly/collect_exif.rb
        spec/robots/assembly/collect_exif_spec.rb

    - add image info

        <contentMetadata type="image">
          <resource type="image">
            <file mimetype="image/tiff">
              <imageData width="100" height="100"/>
              <attr name="representation">uncropped</attr>
            </file>
            <file mimetype="image/jp2">
              <imageData width="100" height="100"/>
              <attr name="representation">uncropped</attr>
            </file>
          </resource>
          <resource type="image">
            <file mimetype="image/tiff">
              <imageData width="100" height="100"/>
              <attr name="representation">uncropped</attr>
            </file>
            <file mimetype="image/jp2">
              <imageData width="100" height="100"/>
              <attr name="representation">uncropped</attr>
            </file>
          </resource>
        </contentMetadata>


Notes on assembly robots:

    - These robots do not interact with DOR except for the workflow changes
      provided by robot framework. Instead, all of the work occurs directly
      in the file system (in the object's druid tree directory).

    - Typically, a robot does some work and then adds more information to
      the content_metadata.xml file sitting in the druid tree directory.


Robots:

    - Create JP2.

    - Compute checksums.

    - Compare checksums -- expected vs. actual.

    - Compute image attributes.

    - Make REST calls to dor-services to initiate common-accessioning.


REST calls to initiate common accessioning.

      See Consul: chimera/REST+mappings+for+dor-services+gem.

      initialize_workspace()
      initiate_apo_workflow()


Spurious error message from robot framework:

    # development.log
    ruby-1.8.7-p302@assembly/gems/solrizer-1.2.0/config/solr_mappings.yml
    I, [2012-03-10T19:22:43.243495 #27010]  INFO -- : Starting assemblyWF:checksum...
    E, [2012-03-10T19:22:43.399322 #27010] ERROR -- : Unable to start assemblyWF:checksum
    I, [2012-03-10T19:22:43.399941 #27010]  INFO -- : Starting assemblyWF:checksum-compare...
    E, [2012-03-10T19:22:43.603310 #27010] ERROR -- : Unable to start assemblyWF:checksum-compare
    SLEEP condition reached in assemblyWF:checksum. Sleeping for 900 seconds.
    SLEEP condition reached in assemblyWF:checksum-compare. Sleeping for 900 seconds.

