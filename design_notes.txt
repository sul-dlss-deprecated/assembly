# TODO: exif robot.
# TODO: jp2 robot.

# TODO: discuss run_robot script: usage, options, etc.
# TODO: stray objects are ending up with workflows.
# TODO: ask how the robots found work if pre-assembly called fedora.client[pid].delete
# TODO: how do we control the robot sleep_time during development/integration-testing.
# TODO: ask about spurious ERROR messages from robot framework (message below).
# TODO: ask about the pid subdirectory that is created by robots.

# TODO: install assembly-images pre-reqs on lyberservices-dev (stack trace below).
# TODO: deployment cap task.

# TODO: consider whether any logging would be useful
# TODO: consider whether it would help to write out information about druids processed.
# TODO: rdoc and README.


Notes on assembly robots:

    - These robots do not interact with DOR except for the workflow changes
      provided by robot framework. Instead, all of the work occurs directly
      in the file system (in the object's druid tree directory).

    - Typically, a robot does some work and then adds more information to
      the content_metadata.xml file sitting in the druid tree directory.


Robots:

    - Compute image attributes.

    - Create JP2 and compute image attributes.

    + Compute checksums.

    + Compare checksums -- expected vs. actual.

    - Make REST calls to dor-services to initiate common-accessioning.


REST calls to initiate common accessioning.

      See Consul: chimera/REST+mappings+for+dor-services+gem.

      initialize_workspace()
      initiate_apo_workflow()


Running robots:

    cd ROBOT_ROOT

    git pull
    get the updated configs, if they have changed
    bundle install
    in boot.rb comment out this line: require assembly-image
    in development.rb, set root_dir '/dor/assembly_test'

    start robots


Misc notes on the pre-assembly code that will be moved into this project (lib/images.rb):

    Required parameters
        tiff file name

    Image attributes: computed, or supplied optionally (*)
        exif information
        jp2 file name (*)
        allow overwrite (*)
        output profile (*)
        input profile

    temp tiff file name
        pixdem
        layers

        publish (*)
        preserve (*)
        shelve (*)
        content label (*)
        file size
        md5 checksum
        sha1 checksum
        format

    Sanity checks
        tiff file exists
        mimetype == tiff
        jp2 file does not exist (unless overwrite requested)
        output profile file exists

        image exists

    Constants
        output profile file name
        input profile file name

        content type description
        cropped

    System calls
        should check return values
        need a mechanism by bypassing/mocking
        is the generic rescue block needed or useful?
        See the systemu gem.


Stack trace from missing exif pre-reqs on lyberservices-dev:

    $ ROBOT_ENVIRONMENT=development bin/run_robot start assemblyWF:checksum assemblyWF:checksum-compare
    /home/lyberadmin/.rvm/gems/ruby-1.8.7-p302@assembly/gems/mini_exiftool-1.3.1/lib/mini_exiftool.rb:252:in `exiftool_version': Command 'exiftool' not found (MiniExiftool::Error)
        from /home/lyberadmin/.rvm/gems/ruby-1.8.7-p302@assembly/gems/mini_exiftool-1.3.1/lib/mini_exiftool.rb:271
        from /home/lyberadmin/.rvm/gems/ruby-1.8.7-p302@assembly/gems/assembly-image-0.0.2/lib/assembly-image/image.rb:2:in `require'
        from /home/lyberadmin/.rvm/gems/ruby-1.8.7-p302@assembly/gems/assembly-image-0.0.2/lib/assembly-image/image.rb:2
        from /home/lyberadmin/.rvm/gems/ruby-1.8.7-p302@assembly/gems/assembly-image-0.0.2/lib/assembly-image.rb:10:in `require'
        from /home/lyberadmin/.rvm/gems/ruby-1.8.7-p302@assembly/gems/assembly-image-0.0.2/lib/assembly-image.rb:10
        from /var/opt/home/lyberadmin/assembly/config/boot.rb:29:in `require'
        from /var/opt/home/lyberadmin/assembly/config/boot.rb:29
        from bin/run_robot:14:in `require'
        from bin/run_robot:14


Spurious error message from robot framework:

    # development.log
    ruby-1.8.7-p302@assembly/gems/solrizer-1.2.0/config/solr_mappings.yml
    I, [2012-03-10T19:22:43.243495 #27010]  INFO -- : Starting assemblyWF:checksum...
    E, [2012-03-10T19:22:43.399322 #27010] ERROR -- : Unable to start assemblyWF:checksum
    I, [2012-03-10T19:22:43.399941 #27010]  INFO -- : Starting assemblyWF:checksum-compare...
    E, [2012-03-10T19:22:43.603310 #27010] ERROR -- : Unable to start assemblyWF:checksum-compare
    SLEEP condition reached in assemblyWF:checksum. Sleeping for 900 seconds.
    SLEEP condition reached in assemblyWF:checksum-compare. Sleeping for 900 seconds.

