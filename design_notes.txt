Notes on assembly robots:

    - These robots do not interact with DOR except for the workflow changes
      provided by robot framework. Instead, all of the work occurs directly
      in the file system (in the object's druid tree directory).

    - Typically, a robot does some work and then adds more information to
      the content_metadata.xml file sitting in the druid tree directory.


Robots:

    - Compute image attributes.

    - Create JP2 and compute image attributes.

    + Compute checksums.

    + Compare checksums -- expected vs. actual.

    - Make REST calls to dor-services to initiate common-accessioning.


REST calls to initiate common accessioning.

      See Consul: chimera/REST+mappings+for+dor-services+gem.

      initialize_workspace()
      initiate_apo_workflow()


Running robots:

    cd ROBOT_ROOT
    ROBOT_ENVIRONMENT=development bin/run_robot start assemblyWF:create-jp2 \
                                                      assemblyWF:foo-bar   


Misc notes on the pre-assembly code that will be moved into this project (lib/images.rb):

    Required parameters
        tiff file name

    Image attributes: computed, or supplied optionally (*)
        exif information
        jp2 file name (*)
        allow overwrite (*)
        output profile (*)
        input profile

    temp tiff file name
        pixdem
        layers

        publish (*)
        preserve (*)
        shelve (*)
        content label (*)
        file size
        md5 checksum
        sha1 checksum
        format

    Sanity checks
        tiff file exists
        mimetype == tiff
        jp2 file does not exist (unless overwrite requested)
        output profile file exists

        image exists

    Constants
        output profile file name
        input profile file name

        content type description
        cropped

    System calls
        should check return values
        need a mechanism by bypassing/mocking
        is the generic rescue block needed or useful?
        See the systemu gem.
